<!DOCTYPE HTML>
<HTML><HEAD><META http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"><TITLE> HELP </TITLE>
<LINK REL="stylesheet" HREF="edes.php?R:$h/i/help2.css" TYPE="text/css">
</HEAD>
<BODY style='margin:0px' scroll=no oncontextmenu='return false;' onhelp='return false'><!-- [HelpIni] --><DIV id=CONTENIDO style="BORDER-RIGHT: 0px; BORDER-TOP: 0px; PADDING-LEFT: 0px; FLOAT: left; MARGIN: 0px; OVERFLOW: auto; BORDER-LEFT: 0px; WIDTH: 100%; BORDER-BOTTOM: 0px; HEIGHT: 100%">
<TABLE id=Esquema cellSpacing=1px cellPadding=2px width="100%">
<TBODY>
<TR>
<TD id=Etiqueta>Manual MySQL
<TR>
<TD id=Descripcion>

<H2><CODE>Tipos numéricos<BR></CODE></H2>
<table border="0" cellspacing=1 cellpadding=2> 
<colgroup> 
<col> 
<col> 
<col> 
<col> 
</colgroup> 
<tbody> 
<tr> 
<td><span class="bold"><strong>Tipo</strong></span></td> 
<td><span class="bold"><strong>Bytes</strong></span></td> 
<td><span class="bold"><strong>Valor Mínimo</strong></span></td> 
<td><span class="bold"><strong>Valor Máximo</strong></span></td> 
</tr> 
<tr> 
<td> </td> 
<td> </td> 
<td><span class="bold"><strong>(Con signo/Sin signo)</strong></span></td> 
<td><span class="bold"><strong>(Con signo/Sin signo)</strong></span></td> 
</tr> 
<tr> 
<td><code class="literal">TINYINT</code></td> 
<td>1</td> 
<td><code class="literal">-128</code></td> 
<td><code class="literal">127</code></td> 
</tr> 
<tr> 
<td> </td> 
<td> </td> 
<td><code class="literal">0</code></td> 
<td><code class="literal">255</code></td> 
</tr> 
<tr> 
<td><code class="literal">SMALLINT</code></td> 
<td>2</td> 
<td><code class="literal">-32768</code></td> 
<td><code class="literal">32767</code></td> 
</tr> 
<tr> 
<td> </td> 
<td> </td> 
<td><code class="literal">0</code></td> 
<td><code class="literal">65535</code></td> 
</tr> 
<tr> 
<td><code class="literal">MEDIUMINT</code></td> 
<td>3</td> 
<td><code class="literal">-8388608</code></td> 
<td><code class="literal">8388607</code></td> 
</tr> 
<tr> 
<td> </td> 
<td> </td> 
<td><code class="literal">0</code></td> 
<td><code class="literal">16777215</code></td> 
</tr> 
<tr> 
<td><code class="literal">INT</code></td> 
<td>4</td> 
<td><code class="literal">-2147483648</code></td> 
<td><code class="literal">2147483647</code></td> 
</tr> 
<tr> 
<td> </td> 
<td> </td> 
<td><code class="literal">0</code></td> 
<td><code class="literal">4294967295</code></td> 
</tr> 
<tr> 
<td><code class="literal">BIGINT</code></td> 
<td>8</td> 
<td><code class="literal">-9223372036854775808</code></td> 
<td><code class="literal">9223372036854775807</code></td> 
</tr> 
<tr> 
<td> </td> 
<td> </td> 
<td><code class="literal">0</code></td> 
<td><code class="literal">18446744073709551615</code></td> 
</tr> 
</tbody> 
</table>

<H2><CODE>Tipos de fecha y hora<BR></CODE></H2>
<table border="0" cellspacing=1 cellpadding=2> 
<colgroup> 
<col> 
<col> 
</colgroup> 
<tbody> 
<tr> 
<td><span class="bold"><strong>Tipo de Columna</strong></span></td> 
<td><span class="bold"><strong>"<span class="quote">Cero</span>" Valor</strong></span></td> 
</tr> 
<tr> 
<td><code class="literal">DATETIME</code></td> 
<td><code class="literal">'0000-00-00 00:00:00'</code></td> 
</tr> 
<tr> 
<td><code class="literal">DATE</code></td> 
<td><code class="literal">'0000-00-00'</code></td> 
</tr> 
<tr> 
<td><code class="literal">TIMESTAMP</code></td> 
<td><code class="literal">00000000000000</code></td> 
</tr> 
<tr> 
<td><code class="literal">TIME</code></td> 
<td><code class="literal">'00:00:00'</code></td> 
</tr> 
<tr> 
<td><code class="literal">YEAR</code></td> 
<td><code class="literal">0000</code></td> 
</tr> 
</tbody>
</table>

<H2><CODE>Los Tipos CHAR y VARCHAR<BR></CODE></H2>

<table border="0" cellspacing=1 cellpadding=2> 
<colgroup> 
<col> 
<col> 
<col> 
<col> 
<col> 
</colgroup> 
<tbody> 
<tr> 
<td><span class="bold"><strong>Valor</strong></span></td> 
<td><code class="literal">CHAR(4)</code></td> 
<td><span class="bold"><strong>Almacenamiento necesario</strong></span></td> 
<td><code class="literal">VARCHAR(4)</code></td> 
<td><span class="bold"><strong>Almacenamiento necesario</strong></span></td> 
</tr> 
<tr> 
<td><code class="literal">''</code></td> 
<td><code class="literal">'    '</code></td> 
<td>4 bytes</td> 
<td><code class="literal">''</code></td> 
<td>1 byte</td> 
</tr> 
<tr> 
<td><code class="literal">'ab'</code></td> 
<td><code class="literal">'ab  '</code></td> 
<td>4 bytes</td> 
<td><code class="literal">'ab'</code></td> 
<td>3 bytes</td> 
</tr> 
<tr> 
<td><code class="literal">'abcd'</code></td> 
<td><code class="literal">'abcd'</code></td> 
<td>4 bytes</td> 
<td><code class="literal">'abcd'</code></td> 
<td>5 bytes</td> 
</tr> 
<tr> 
<td><code class="literal">'abcdefgh'</code></td> 
<td><code class="literal">'abcd'</code></td> 
<td>4 bytes</td> 
<td><code class="literal">'abcd'</code></td> 
<td>5 bytes</td> 
</tr> 
</tbody> 
</table>

<H2><CODE>Los Tipos BINARIO y VARBINARY<BR></CODE></H2>
<H2><CODE>Los Tipos BLOB y TEXTO<BR></CODE></H2><pre>
TINYBLOB, BLOB, MEDIUMBLOB, y LONGBLOB
TINYTEXT, TEXT, MEDIUMTEXT, y LONGTEXT

<H2><CODE>El Tipo de Columna ENUM<BR></CODE></H2>
<H2><CODE>El Tipo SET<BR></CODE></H2>


<H2><CODE>ALMACENAMIENTO<BR></CODE></H2>
<table border="0" cellspacing=1 cellpadding=2> 
<colgroup> 
<col> 
<col> 
</colgroup> 
<tbody> 
<tr> 
<td><span class="bold"><strong>Tipo de columna</strong></span></td> 
<td><span class="bold"><strong>Almacenamiento requerido</strong></span></td> 
</tr> 
<tr> 
<td><code class="literal">TINYINT</code></td> 
<td>1 byte</td> 
</tr> 
<tr> 
<td><code class="literal">SMALLINT</code></td> 
<td>2 bytes</td> 
</tr> 
<tr> 
<td><code class="literal">MEDIUMINT</code></td> 
<td>3 bytes</td> 
</tr> 
<tr> 
<td> 
<code class="literal">INT</code>, <code class="literal">INTEGER</code> 
</td> 
<td>4 bytes</td> 
</tr> 
<tr> 
<td><code class="literal">BIGINT</code></td> 
<td>8 bytes</td> 
</tr> 
<tr> 
<td><code class="literal">FLOAT(<em class="replaceable"><code>p</code></em>)</code></td> 
<td>4 bytes si 0 &lt;= <em class="replaceable"><code>p</code></em> &lt;= 24, 8 bytes si 25
              &lt;= <em class="replaceable"><code>p</code></em> &lt;= 53</td> 
</tr> 
<tr> 
<td><code class="literal">FLOAT</code></td> 
<td>4 bytes</td> 
</tr> 
<tr> 
<td> 
<code class="literal">DOUBLE [PRECISION]</code>, objeto <code class="literal">REAL</code> 
</td> 
<td>8 bytes</td> 
</tr> 
<tr> 
<td> 
<code class="literal">DECIMAL(<em class="replaceable"><code>M</code></em>,<em class="replaceable"><code>D</code></em>)</code>,
              <code class="literal">NUMERIC(<em class="replaceable"><code>M</code></em>,<em class="replaceable"><code>D</code></em>)</code> 
</td> 
<td>Varía; consulte la siguiente explicación</td> 
</tr> 
<tr> 
<td><code class="literal">BIT(<em class="replaceable"><code>M</code></em>)</code></td> 
<td>aproximadamente (<em class="replaceable"><code>M</code></em>+7)/8 bytes</td> 
</tr> 
</tbody> 
</table>

<table border="0" cellspacing=1 cellpadding=2> 
<colgroup> 
<col> 
<col> 
</colgroup> 
<tbody> 
<tr> 
<td><span class="bold"><strong>Resto</strong></span></td> 
<td><span class="bold"><strong>Número</strong></span></td> 
</tr> 
<tr> 
<td><span class="bold"><strong>Dítigos</strong></span></td> 
<td><span class="bold"><strong>de bytes</strong></span></td> 
</tr> 
<tr> 
<td>0</td> 
<td>0</td> 
</tr> 
<tr> 
<td>1</td> 
<td>1</td> 
</tr> 
<tr> 
<td>2</td> 
<td>1</td> 
</tr> 
<tr> 
<td>3</td> 
<td>2</td> 
</tr> 
<tr> 
<td>4</td> 
<td>2</td> 
</tr> 
<tr> 
<td>5</td> 
<td>3</td> 
</tr> 
<tr> 
<td>6</td> 
<td>3</td> 
</tr> 
<tr> 
<td>7</td> 
<td>4</td> 
</tr> 
<tr> 
<td>8</td> 
<td>4</td> 
</tr> 
<tr> 
<td>9</td> 
<td>4</td> 
</tr> 
</tbody> 
</table>

<table border="0" cellspacing=1 cellpadding=2> 
<colgroup> 
<col> 
<col> 
</colgroup> 
<tbody> 
<tr> 
<td><span class="bold"><strong>Tipo de columna</strong></span></td> 
<td><span class="bold"><strong>Almacenamiento requerido</strong></span></td> 
</tr> 
<tr> 
<td><code class="literal">DATE</code></td> 
<td>3 bytes</td> 
</tr> 
<tr> 
<td><code class="literal">DATETIME</code></td> 
<td>8 bytes</td> 
</tr> 
<tr> 
<td><code class="literal">TIMESTAMP</code></td> 
<td>4 bytes</td> 
</tr> 
<tr> 
<td><code class="literal">TIME</code></td> 
<td>3 bytes</td> 
</tr> 
<tr> 
<td><code class="literal">YEAR</code></td> 
<td>1 byte</td> 
</tr> 
</tbody> 
</table>

<table border="0" cellspacing=1 cellpadding=2> 
<colgroup> 
<col> 
<col> 
</colgroup> 
<tbody> 
<tr> 
<td><span class="bold"><strong>Tipo de columna</strong></span></td> 
<td><span class="bold"><strong>Almacenamiento requerido</strong></span></td> 
</tr> 
<tr> 
<td><code class="literal">CHAR(<em class="replaceable"><code>M</code></em>)</code></td> 
<td> 
<code class="literal"><em class="replaceable"><code>M</code></em></code> bytes, 0 <code class="literal">&lt;=
              <em class="replaceable"><code>M</code></em> &lt;=</code> 255</td> 
</tr> 
<tr> 
<td><code class="literal">VARCHAR(<em class="replaceable"><code>M</code></em>)</code></td> 
<td> 
<em class="replaceable"><code>L</code></em>+1 bytes, donde
              <code class="literal"><em class="replaceable"><code>L</code></em> &lt;=
              <em class="replaceable"><code>M</code></em></code> y 0 <code class="literal">&lt;=
              <em class="replaceable"><code>M</code></em> &lt;=</code> 255</td> 
</tr> 
<tr> 
<td><code class="literal">BINARY(<em class="replaceable"><code>M</code></em>)</code></td> 
<td> 
<code class="literal"><em class="replaceable"><code>M</code></em></code> bytes, 0 <code class="literal">&lt;=
              <em class="replaceable"><code>M</code></em> &lt;=</code> 255</td> 
</tr> 
<tr> 
<td><code class="literal">VARBINARY(<em class="replaceable"><code>M</code></em>)</code></td> 
<td> 
<em class="replaceable"><code>L</code></em>+1 bytes, donde
              <code class="literal"><em class="replaceable"><code>L</code></em> &lt;=
              <em class="replaceable"><code>M</code></em></code> y 0 <code class="literal">&lt;=
              <em class="replaceable"><code>M</code></em> &lt;=</code> 255</td> 
</tr> 
<tr> 
<td> 
<code class="literal">TINYBLOB</code>, <code class="literal">TINYTEXT</code> 
</td> 
<td> 
<em class="replaceable"><code>L</code></em>+1 byte, donde <em class="replaceable"><code>L</code></em> 
              &lt; 2^8 (256 bytes)</td> 
</tr> 
<tr> 
<td> 
<code class="literal">BLOB</code>, <code class="literal">TEXT</code> 
</td> 
<td> 
<em class="replaceable"><code>L</code></em>+2 bytes, donde <em class="replaceable"><code>L</code></em> 
              &lt; 2^16 (65,535 bytes - 64KB)</td> 
</tr> 
<tr> 
<td> 
<code class="literal">MEDIUMBLOB</code>, <code class="literal">MEDIUMTEXT</code> 
</td> 
<td> 
<em class="replaceable"><code>L</code></em>+3 bytes, donde <em class="replaceable"><code>L</code></em> 
              &lt; 2^24 (16,777,215 bytes - 16MB)</td> 
</tr> 
<tr> 
<td> 
<code class="literal">LONGBLOB</code>, <code class="literal">LONGTEXT</code> 
</td> 
<td> 
<em class="replaceable"><code>L</code></em>+4 bytes, donde <em class="replaceable"><code>L</code></em> 
              &lt; 2^32 (4,294,967,295 bytes - 4GB)</td> 
</tr> 
<tr> 
<td><code class="literal">ENUM('<em class="replaceable"><code>value1</code></em>','<em class="replaceable"><code>value2</code></em>',...)</code></td> 
<td>1 o 2 bytes, dependiendo del número de valores de la enumeración
              (65,535 valores como máximo)</td> 
</tr> 
<tr> 
<td><code class="literal">SET('<em class="replaceable"><code>value1</code></em>','<em class="replaceable"><code>value2</code></em>',...)</code></td> 
<td>1, 2, 3, 4, o 8 bytes, dependiendo del número de miembros del conjunto
              (64 miembros como máximo)</td> 
</tr> 
</tbody> 
</table>



<p><font color="#800000"><em><strong>1) CAMPOS PARA TEXTO:</strong></em></font></p>
<table border="0" cellspacing=1 cellpadding=2> 
    <tbody>
        <tr>
            <td><strong>CHAR( )</strong></td>
            <td>Tama&ntilde;o fijo, entre <strong>0</strong> y <strong>255</strong> car&aacute;cteres.</td>
        </tr>
        <tr>
            <td><strong>VARCHAR( )</strong></td>
            <td>Tama&ntilde;o variable, entre <strong>0</strong> y <strong>255</strong> car&aacute;cteres.</td>
        </tr>
        <tr>
            <td><strong>TINYTEXT</strong></td>
            <td>Cadena con longitud m&aacute;xima de <strong>255 </strong>car&aacute;cteres.</td>
        </tr>
        <tr>
            <td><strong>TEXT</strong></td>
            <td>Cadena con longitud m&aacute;xima de <strong>65.535</strong> car&aacute;cteres.</td>
        </tr>
        <tr>
            <td><strong>BLOB</strong></td>
            <td>Cadena con longitud m&aacute;xima de <strong>65.535</strong> car&aacute;cteres.</td>
        </tr>
        <tr>
            <td><strong>MEDIUMTEXT</strong></td>
            <td>Cadena con longitud m&aacute;xima de <strong>16.777.215</strong> car&aacute;cteres.</td>
        </tr>
        <tr>
            <td><strong>LONGTEXT</strong></td>
            <td>Cadena con longitud m&aacute;xima de <strong>4.294.967.295</strong> car&aacute;cteres.</td>
        </tr>
        <tr>
            <td><strong>LONGBLOB</strong></td>
            <td>Cadena con longitud m&aacute;xima de <strong>4.294.967.295</strong> car&aacute;cteres.</td>
        </tr>
    </tbody>
</table>
<p>La diferencia entre TEXT y BLOB reside en que utilizando TEXT se pueden realizar comparaciones sin distinguir may&uacute;sculas y min&uacute;sculas, lo cual no es posible si se emplea BLOB.</p>
<p><font color="#800000"><em><em><strong>2) CAMPOS PARA N&Uacute;MEROS:</strong></em></em></font></p>
<table border="0" cellspacing=1 cellpadding=2> 
    <tbody>
        <tr>
            <td><strong>TINYINT( )</strong></td>
            <td>
            <p>Desde <strong>-128</strong> a <strong>127</strong> con signo.</p>
            <p>Desde <strong>0</strong> a <strong>255</strong> sin signo (<em>UNSIGNED</em>).</p>
            </td>
        </tr>
        <tr>
            <td><strong>SMALLINT( )</strong></td>
            <td>
            <p>Desde <strong>-32.768</strong> a <strong>32.767</strong> con signo.</p>
            <p>Desde <strong>0</strong> a <strong>65.535</strong> sin signo (<em>UNSIGNED</em>).</p>
            </td>
        </tr>
        <tr>
            <td><strong>MEDIUMINT()</strong></td>
            <td>
            <p>Desde <strong>-8.388.608</strong> a <strong>8.388.607</strong> con signo.</p>
            <p>Desde <strong>0</strong> a <strong>16.777.215</strong> sin signo (<em>UNSIGNED</em>).</p>
            </td>
        </tr>
        <tr>
            <td><strong>INT( )</strong></td>
            <td>
            <p>Desde <strong>-2.147.483.648</strong> a <strong>2.147.483.647</strong> con signo.</p>
            <p>Desde <strong>0</strong> a <strong>4.294.967.295</strong> sin signo (<em>UNSIGNED</em>).</p>
            </td>
        </tr>
        <tr>
            <td><strong>BIGINT( )</strong></td>
            <td>
            <p>Desde <strong>-9.223.372.036.854.775.808</strong> a <strong>9.223.372.036.854.775.807</strong> con signo.</p>
            <p>Desde <strong>0</strong> a <strong>18.446.744.073.709.551.615</strong> sin signo (<em>UNSIGNED</em>).</p>
            </td>
        </tr>
        <tr>
            <td><strong>FLOAT</strong></td>
            <td>N&uacute;meros peque&ntilde;os en coma flotante.</td>
        </tr>
        <tr>
            <td><strong>DOUBLE( , )</strong></td>
            <td>N&uacute;meros grandes en coma flotante.</td>
        </tr>
        <tr>
            <td><strong>DECIMAL( , )</strong></td>
            <td><em>Double</em> almacenado como una cadena, para n&uacute;meros en coma fija.</td>
        </tr>
    </tbody>
</table>
</p>
<p><font color="#800000"><em><em><em><em><strong>3) CAMPOS PARA FECHAS Y HORAS:</strong></em></em></em></em></font></p>
<table border="0" cellspacing=1 cellpadding=2> 
    <tbody>
        <tr>
            <td><strong>DATE</strong></td>
            <td>AAAA-MM-DD</td>
        </tr>
        <tr>
            <td><strong>DATETIME</strong></td>
            <td>AAAA-MM-DD HH:MM:SS</td>
        </tr>
        <tr>
            <td><strong>TIMESTAMP</strong></td>
            <td>AAAAMMDDHHMMSS</td>
        </tr>
        <tr>
            <td><strong>TIME</strong></td>
            <td>HH:MM:SS</td>
        </tr>
    </tbody>
</table>
</p>
<p>Donde:
	<strong>AAAA</strong>: A&ntilde;o en formato de cuatro d&iacute;gitos. Ej: 2007.
	<strong>MM</strong>,<strong> DD</strong>,<strong> HH</strong>,<strong> MM </strong>y<strong> SS</strong>: D&iacute;as, horas, minutos y segundos respectivamente, todas ellas en formato de dos d&iacute;gitos. Ej: 04.<br>
<p><font color="#800000"><em><strong>4) OTROS CAMPOS:</strong></em></font></p>
<table border="0" cellspacing=1 cellpadding=2> 
    <tbody>
        <tr>
            <td><strong>ENUM( )</strong></td>
            <td>Cada columna puede tener uno de los valores especificados.</td>
        </tr>
        <tr>
            <td><strong>SET</strong></td>
            <td>Similar a ENUM( ), pero en este caso cada columna puede tener m&aacute;s de uno de los valores especificados.</td>
        </tr>
    </tbody>
</table>




<H2><CODE>ALTER TABLE<BR></CODE></H2><PRE>ALTER [IGNORE] TABLE tbl_name alter_spec [, alter_spec ...]

alter_specification:
        ADD [COLUMN] create_definition [FIRST | AFTER column_name ]
  or    ADD [COLUMN] (create_definition, create_definition,...)
  or    ADD INDEX [index_name] (index_col_name,...)
  or    ADD PRIMARY KEY (index_col_name,...)
  or    ADD UNIQUE [index_name] (index_col_name,...)
  or    ADD FULLTEXT [index_name] (index_col_name,...)
  or    ADD [CONSTRAINT symbol] FOREIGN KEY index_name (index_col_name,...)
            [reference_definition]
  or    ALTER [COLUMN] col_name {SET DEFAULT literal | DROP DEFAULT}
  or    CHANGE [COLUMN] old_col_name create_definition
  or    MODIFY [COLUMN] create_definition
  or    DROP [COLUMN] col_name
  or    DROP PRIMARY KEY
  or    DROP INDEX index_name
  or    RENAME [TO] new_tbl_name
  or    ORDER BY col
  or    table_options
<H2><CODE><BR>RENAME TABLE<BR></CODE></H2><PRE>RENAME TABLE tbl_name TO new_table_name[, tbl_name2 TO new_table_name2,...]<BR><H2><CODE><BR>DROP TABLE</CODE></H2><PRE>DROP TABLE [IF EXISTS] tbl_name [, tbl_name,...] [RESTRICT | CASCADE]<BR><H2><CODE><CODE><BR>O</CODE>PTIMIZE TABLE</CODE></H2><PRE>OPTIMIZE TABLE tbl_name[,tbl_name]...
<H2><CODE><BR>CHECK TABLE</CODE></H2><PRE>CHECK TABLE tbl_name[,tbl_name...] [option [option...]]

option = QUICK | FAST | MEDIUM | EXTEND | CHANGED
<H2><CODE><BR>BACKUP TABLE</CODE></H2><PRE>BACKUP TABLE tbl_name[,tbl_name...] TO '/path/to/backup/directory'<H2><CODE><BR>RESTORE TABLE</CODE></H2><PRE>RESTORE TABLE tbl_name[,tbl_name...] FROM '/path/to/backup/directory'<H2><CODE><BR>ANALYZE TABLE</CODE></H2><PRE>ANALYZE TABLE tbl_name[,tbl_name...]<H2><CODE><BR>REPAIR TABLE</CODE></H2><PRE>REPAIR TABLE tbl_name[,tbl_name...] [QUICK] [EXTENDED]<H2><CODE><BR>DELETE</CODE></H2><PRE>DELETE [LOW_PRIORITY] FROM tbl_name
    [WHERE where_definition]
    [LIMIT rows]
<H2><CODE><BR>TRUNCATE</CODE></H2><PRE>TRUNCATE TABLE table_name
<H2><CODE><BR>SELECT</CODE></H2><PRE>SELECT [STRAIGHT_JOIN] [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT]
       [HIGH_PRIORITY]
       [DISTINCT | DISTINCTROW | ALL]
    select_expression,...
    [INTO {OUTFILE | DUMPFILE} 'file_name' export_options]
    [FROM table_references
        [WHERE where_definition]
        [GROUP BY {unsigned_integer | col_name | formula}]
        [HAVING where_definition]
        [ORDER BY {unsigned_integer | col_name | formula} [ASC | DESC] ,...]
        [LIMIT [offset,] rows]
        [PROCEDURE procedure_name] ]
<H2><CODE><BR>JOIN</CODE></H2><P><STRONG>MySQL</STRONG> supports the following <CODE><FONT color=#800080>JOIN</FONT></CODE> syntaxes for use in <CODE><FONT color=#800080>SELECT</FONT></CODE> statements: </P><PRE>table_reference, table_reference
table_reference [CROSS] JOIN table_reference
table_reference INNER JOIN table_reference join_condition
table_reference STRAIGHT_JOIN table_reference
table_reference LEFT [OUTER] JOIN table_reference join_condition
table_reference LEFT [OUTER] JOIN table_reference
table_reference NATURAL [LEFT [OUTER]] JOIN table_reference
{ oj table_reference LEFT OUTER JOIN table_reference ON conditional_expr }
table_reference RIGHT [OUTER] JOIN table_reference join_condition
table_reference RIGHT [OUTER] JOIN table_reference
table_reference NATURAL [RIGHT [OUTER]] JOIN table_reference
</PRE><P>Where <CODE><FONT color=#800080>table_reference</FONT></CODE> is defined as: <PRE>table_name [[AS] alias] [USE INDEX (key_list)] [IGNORE INDEX (key_list)]
</PRE><P>and <CODE><FONT color=#800080>join_condition</FONT></CODE> is defined as: </P><PRE>ON conditional_expr |
USING (column_list)
<H2><CODE><BR>INSERT</CODE></H2><PRE>    INSERT [LOW_PRIORITY | DELAYED] [IGNORE]
        [INTO] tbl_name [(col_name,...)]
        VALUES (expression,...),(...),...
or  INSERT [LOW_PRIORITY | DELAYED] [IGNORE]
        [INTO] tbl_name [(col_name,...)]
        SELECT ...
or  INSERT [LOW_PRIORITY | DELAYED] [IGNORE]
        [INTO] tbl_name
        SET col_name=expression, col_name=expression, ...
<H2><CODE><BR>REPLACE</CODE></H2><PRE>    REPLACE [LOW_PRIORITY | DELAYED]
        [INTO] tbl_name [(col_name,...)]
        VALUES (expression,...)
or  REPLACE [LOW_PRIORITY | DELAYED]
        [INTO] tbl_name [(col_name,...)]
        SELECT ...
or  REPLACE [LOW_PRIORITY | DELAYED]
        [INTO] tbl_name
        SET col_name=expression, col_name=expression,...
<H2><CODE><BR>LOAD DATA INFILE</CODE></H2><PRE>LOAD DATA [LOW_PRIORITY] [LOCAL] INFILE 'file_name.txt' [REPLACE | IGNORE]
    INTO TABLE tbl_name
    [FIELDS
        [TERMINATED BY '\t']
        [[OPTIONALLY] ENCLOSED BY '']
        [ESCAPED BY '\\' ]
    ]
    [LINES TERMINATED BY '\n']
    [IGNORE number LINES]
    [(col_name,...)]
<H2><CODE><BR>UPDATE</CODE></H2><PRE>UPDATE [LOW_PRIORITY] [IGNORE] tbl_name
    SET col_name1=expr1, [col_name2=expr2, ...]
    [WHERE where_definition]
    [ORDER BY ...]
    [LIMIT #]
<H2><CODE><BR>USE</CODE></H2><PRE>USE db_name
<H2><CODE><BR>FLUSH</CODE> Clearing Caches)</H2><PRE>FLUSH flush_option [,flush_option]
<H2><CODE><BR>KILL</CODE></H2><PRE>KILL thread_id
<H2><CODE><BR>SHOW</CODE> (Get Information About Tables, Columns,...)</H2><PRE>   SHOW DATABASES [LIKE wild]
or SHOW [OPEN] TABLES [FROM db_name] [LIKE wild]
or SHOW [FULL] COLUMNS FROM tbl_name [FROM db_name] [LIKE wild]
or SHOW INDEX FROM tbl_name [FROM db_name]
or SHOW TABLE STATUS [FROM db_name] [LIKE wild]
or SHOW STATUS [LIKE wild]
or SHOW VARIABLES [LIKE wild]
or SHOW LOGS
or SHOW [FULL] PROCESSLIST
or SHOW GRANTS FOR user
or SHOW CREATE TABLE table_name
<H2><CODE><BR>EXPLAIN</CODE> (Get Information About a <CODE>SELECT</CODE>)</H2><PRE>    EXPLAIN tbl_name
or  EXPLAIN SELECT select_options
<H2><CODE><BR>DESCRIBE</CODE> (Get Information About Columns)</H2><PRE>{DESCRIBE | DESC} tbl_name {col_name | wild}
<H2><CODE><BR>BEGIN/COMMIT/ROLLBACK</CODE></H2><P>By default, <STRONG>MySQL</STRONG> runs in <CODE><FONT color=#800080>autocommit</FONT></CODE> mode. This means that as soon as you execute an update, <STRONG>MySQL</STRONG> will store the<BR>update on disk. </P><P>If you are using <CODE><FONT color=#800080>BDB</FONT></CODE> tables, you can put <STRONG>MySQL</STRONG> into non-<CODE><FONT color=#800080>autocommit</FONT></CODE> mode with the following command: </P><PRE>SET AUTOCOMMIT=0
</PRE><P>After this you must use <CODE><FONT color=#800080>COMMIT</FONT></CODE> to store your changes to disk or <CODE><FONT color=#800080>ROLLBACK</FONT></CODE> if you want to ignore the changes you have<BR>made since the beginning of your transaction. </P><P>If you want to switch from <CODE><FONT color=#800080>AUTOCOMMIT</FONT></CODE> mode for one series of statements, you can use the <CODE><FONT color=#800080>BEGIN</FONT></CODE> or <CODE><FONT color=#800080>BEGIN WORK</FONT></CODE> <BR>statement: </P><PRE>BEGIN;
SELECT @A:=SUM(salary) FROM table1 WHERE type=1;
UPDATE table2 SET summmary=@A WHERE type=1;
COMMIT;
<H2><CODE><BR>LOCK TABLES/UNLOCK TABLES</CODE></H2><PRE>LOCK TABLES tbl_name [AS alias] {READ | [READ LOCAL] | [LOW_PRIORITY] WRITE}
            [, tbl_name {READ | [LOW_PRIORITY] WRITE} ...]
...
UNLOCK TABLES
<H2><CODE><BR>SET</CODE></H2><PRE>SET [OPTION] SQL_VALUE_OPTION= value, ...
<H2><CODE><BR>GRANT</CODE> and <CODE>REVOKE</CODE></H2><PRE>GRANT priv_type [(column_list)] [, priv_type [(column_list)] ...]
    ON {tbl_name | * | *.* | db_name.*}
    TO user_name [IDENTIFIED BY 'password']
        [, user_name [IDENTIFIED BY 'password'] ...]
    [WITH GRANT OPTION]

REVOKE priv_type [(column_list)] [, priv_type [(column_list)] ...]
    ON {tbl_name | * | *.* | db_name.*}
    FROM user_name [, user_name ...]
<H2><CODE><BR>CREATE INDEX</CODE></H2><PRE>CREATE [UNIQUE|FULLTEXT] INDEX index_name ON tbl_name (col_name[(length)],... )
<H2><CODE><BR>DROP INDEX</CODE></H2><PRE>DROP INDEX index_name ON tbl_name
<H2><CODE><BR>CREATE FUNCTION/DROP FUNCTION</CODE></H2><PRE>CREATE [AGGREGATE] FUNCTION function_name RETURNS {STRING|REAL|INTEGER}
       SONAME shared_library_name

DROP FUNCTION function_name</PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></PRE></CODE></TD></TR></TBODY></TABLE></DIV><!-- [HelpEnd] -->
<SCRIPT LANGUAGE="JavaScript">
Esquema.cellSpacing = 0;
if( document.getElementById("Ejemplo")!=null ){
	if( Ejemplo.length == undefined && Ejemplo.innerHTML.length == 0 ){
		tEjemplo.parentElement.style.display = 'none';
	}else{
		for( var i=0; i<Ejemplo.length; i++ ){
			if( Ejemplo[i].innerHTML.length == 0 ) Ejemplo[i].parentElement.style.display = 'none';
		}
	}
}
if( document.getElementById("Parametro")!=null && Parametro.innerHTML.length == 0 ) tParametro.parentElement.style.display = 'none';if( window.frameElement.getAttribute("eSubWin")==1 ) Etiqueta.style.display = "none";

window.focus();
</SCRIPT>
</BODY></HTML>